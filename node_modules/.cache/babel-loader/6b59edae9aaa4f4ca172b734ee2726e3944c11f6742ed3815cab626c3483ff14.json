{"ast":null,"code":"var _jsxFileName = \"/home/iauro/TPT-assignment/src/Components/PhotoList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PhotoItem = _ref => {\n  let {\n    title,\n    thumbnailUrl\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: thumbnailUrl,\n      alt: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 4,\n    columnNumber: 3\n  }, this);\n};\n_c = PhotoItem;\nconst PhotoList = () => {\n  _s();\n  const [photos, setPhotos] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(\"https://jsonplaceholder.typicode.com/photos\");\n        if (!response.ok) {\n          throw new Error(\"Error fetching data\");\n        }\n        const data = await response.json();\n        setPhotos(data);\n        setIsLoading(false);\n      } catch (error) {\n        setError(error);\n        setIsLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: photos.map(photo => /*#__PURE__*/_jsxDEV(PhotoItem, {\n      title: photo.title,\n      thumbnailUrl: photo.thumbnailUrl\n    }, photo.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(PhotoList, \"e5Kk531OiTjwMMlUuD3JLlzKzAI=\");\n_c2 = PhotoList;\nexport default PhotoList;\nvar _c, _c2;\n$RefreshReg$(_c, \"PhotoItem\");\n$RefreshReg$(_c2, \"PhotoList\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","PhotoItem","_ref","title","thumbnailUrl","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","_c","PhotoList","_s","photos","setPhotos","isLoading","setIsLoading","error","setError","fetchData","response","fetch","ok","Error","data","json","message","map","photo","id","_c2","$RefreshReg$"],"sources":["/home/iauro/TPT-assignment/src/Components/PhotoList.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nconst PhotoItem = ({ title, thumbnailUrl }) => (\n  <div>\n    <h3>{title}</h3>\n    <img src={thumbnailUrl} alt={title} />\n  </div>\n);\n\nconst PhotoList = () => {\n  const [photos, setPhotos] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(\n          \"https://jsonplaceholder.typicode.com/photos\"\n        );\n        if (!response.ok) {\n          throw new Error(\"Error fetching data\");\n        }\n        const data = await response.json();\n        setPhotos(data);\n        setIsLoading(false);\n      } catch (error) {\n        setError(error);\n        setIsLoading(false);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  if (isLoading) {\n    return <div>Loading...</div>;\n  }\n\n  if (error) {\n    return <div>Error: {error.message}</div>;\n  }\n\n  return (\n    <div>\n      {photos.map((photo) => (\n        <PhotoItem\n          key={photo.id}\n          title={photo.title}\n          thumbnailUrl={photo.thumbnailUrl}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default PhotoList;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,SAAS,GAAGC,IAAA;EAAA,IAAC;IAAEC,KAAK;IAAEC;EAAa,CAAC,GAAAF,IAAA;EAAA,oBACxCF,OAAA;IAAAK,QAAA,gBACEL,OAAA;MAAAK,QAAA,EAAKF;IAAK;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAChBT,OAAA;MAAKU,GAAG,EAAEN,YAAa;MAACO,GAAG,EAAER;IAAM;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnC,CAAC;AAAA,CACP;AAACG,EAAA,GALIX,SAAS;AAOf,MAAMY,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACoB,SAAS,EAAEC,YAAY,CAAC,GAAGrB,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACsB,KAAK,EAAEC,QAAQ,CAAC,GAAGvB,QAAQ,CAAC,IAAI,CAAC;EAExCC,SAAS,CAAC,MAAM;IACd,MAAMuB,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,6CACF,CAAC;QACD,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,qBAAqB,CAAC;QACxC;QACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QAClCX,SAAS,CAACU,IAAI,CAAC;QACfR,YAAY,CAAC,KAAK,CAAC;MACrB,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,QAAQ,CAACD,KAAK,CAAC;QACfD,YAAY,CAAC,KAAK,CAAC;MACrB;IACF,CAAC;IAEDG,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIJ,SAAS,EAAE;IACb,oBAAOjB,OAAA;MAAAK,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC9B;EAEA,IAAIU,KAAK,EAAE;IACT,oBAAOnB,OAAA;MAAAK,QAAA,GAAK,SAAO,EAACc,KAAK,CAACS,OAAO;IAAA;MAAAtB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAC1C;EAEA,oBACET,OAAA;IAAAK,QAAA,EACGU,MAAM,CAACc,GAAG,CAAEC,KAAK,iBAChB9B,OAAA,CAACC,SAAS;MAERE,KAAK,EAAE2B,KAAK,CAAC3B,KAAM;MACnBC,YAAY,EAAE0B,KAAK,CAAC1B;IAAa,GAF5B0B,KAAK,CAACC,EAAE;MAAAzB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGd,CACF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACK,EAAA,CA7CID,SAAS;AAAAmB,GAAA,GAATnB,SAAS;AA+Cf,eAAeA,SAAS;AAAC,IAAAD,EAAA,EAAAoB,GAAA;AAAAC,YAAA,CAAArB,EAAA;AAAAqB,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}